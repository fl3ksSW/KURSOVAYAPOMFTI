user nginx;
worker_processes auto;
worker_cpu_affinity auto;
error_log /var/log/nginx/error.log;


events {
    worker_connections 768;
    multi_accept on;
}

http {
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    disable_symlinks on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Limiting buffers
    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 2k;
    large_client_header_buffers 2 2k;

    # Compression configuration
    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 2k;
    gzip_buffers 24 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/javascript application/xml text/xml application/xml+rss;
    gzip_proxied no-cache no-store private expired auth;
    gzip_static on;
    gunzip on;

    # Encryption / Security
    #ssl_certificate /etc/nginx/ssl/cert.pem;
    #ssl_certificate_key /etc/nginx/ssl/key.pem;
    #ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    #ssl_session_timeout 1d;
    #ssl_session_cache shared:SSL:48m;
    #ssl_session_tickets off;
    
    #ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    ##ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    #ssl_prefer_server_ciphers On;

    server {
        server_name localhost;
        error_log /dev/null warn;
        access_log off;
        
        listen 80; # ssl http2;
        listen [::]:80; # ssl http2;

        location /static/ {
            alias /var/nginx/static/;
        }

        location / {
            error_log /dev/null crit;
            
            proxy_pass http://web-app:8844;
            proxy_redirect http://web-app:8844 /;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
        }
    }
}